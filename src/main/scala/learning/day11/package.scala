package learning

/**
 * 学习目标：如何使用Actor编程
 * 对于使用Actor的建议：
 * 1.更多的依赖无状态的而不是有状态的Actor，无状态的Actor没有特殊性，他们可以提供更多的并发性，易于复制，并且很容易
 * 重启和复用。
 * 2.要保证Receive方法中的处理速度非常快，尤其是接收Actor具有状态的时候，改变状态的长时间运行任务将会降低并发性，
 * 要避免这么做。如果不修改状态的任务不是非常快速也不是什么问题，因为我们可以很容易地通过复制这些Actor来改进并发性。
 * 3.确保在Actor之间传递的消息是不可变的对象，在本节示例过程中，我们传递的都是case类的实例，String或者Int，这些都是
 * 不可变的，传递不可变对象将保证我们不会在无意间修改共享状态，并最终导致并发问题
 * 4.尽量避免使用ask() 也就是双向通信的？方法，双向通信通常都不是一个好方法，“发送并忘记”模型要好得多，而且也不容易出错
 */
package object day11 {

}
